
# You can use this file to easily send requests to your API.
# Prerequisite: humao.rest-client Vscode plugin (already present on codespace)
# High-level overview of REST API concepts used here: https://www.packtpub.com/en-us/learning/how-to-tutorials/what-are-rest-verbs-and-status-codes-tutorial?srsltid=AfmBOoppDqtkhRxj5BLZONRZFzRDmh6eP-xyTo6H4OuEHYuVbrg1d4Dm


# Requests for API endpoints of the sample project:

### Hello world endpoint: get response "Hello, Stranger!"
GET http://localhost:8080/hello-world

### Hello world with a request param passed.
# When sending the request it will ask you for the name
# hitting enter will avoid passing the param, and do the default behaviour above
# @prompt name The name to display in response
GET http://localhost:8080/hello-world
    ?name={{name}}

### Save a greeting to database
@postGreetingId = 1001
@postGreetingContent = Hello!
POST http://localhost:8080/greetings
Content-Type: application/json

{
    "id": "{{postGreetingId}}",
    "content": "{{postGreetingContent}}"
}

### Get all greetings
GET http://localhost:8080/greetings

### Get info for greeting with given content
# @prompt content Greeting content to look for, defaults to "Overview"
GET http://localhost:8080/info
    ?title={{content}}

### Update an existing greeting
@putGreetingId = 1001
@putGreetingContent = Hello again!
PUT http://localhost:8080/greetings/{{putGreetingId}}
Content-Type: application/json

{
    "content": "{{putGreetingContent}}"
}

### Delete greeting
@deleteGreetingId = 1001
DELETE http://localhost:8080/greetings/{{deleteGreetingId}}


# TODO add requests for your own endpoints!







### 1Ô∏è‚É£ Register a new client
POST http://localhost:8080/api/clients/register
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0QGV4YW1wbGUuY29tIiwiaWF0IjoxNzQyMjQyODgzLCJleHAiOjE3NDIyNzg4ODN9.1YrRO17DaiY2K2dwLjh0lAHR98eVWYqmBUG7_Zu_s6I
Content-Type: application/json

{
  "email": "client2@example.com",
  "password": "securepassword"
}

### 2Ô∏è‚É£ Login client
POST http://localhost:8080/api/clients/login
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0MUBleGFtcGxlLmNvbSIsImlhdCI6MTc0MjMyMTM0NywiZXhwIjoxNzQyMzU3MzQ3fQ.xyR_8fWuHMOmfTKqEaOCwRyEiTw2CvSY5hjOXBtdp4U
Content-Type: application/json
Authorization: None

{
  "email": "client2@example.com",
  "password": "securepassword"
}

### 3Ô∏è‚É£ Create a new bank account
POST http://localhost:8080/api/bank-accounts
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjbGllbnQyQGV4YW1wbGUuY29tIiwiaWF0IjoxNzQyMzM3MDUxLCJleHAiOjE3NDIzNzMwNTF9.0Ofr812jNitF6hEa6Y2MqImSYZkdvXO3Dcg2iE-un2w

{
  "accountNumber": "1234567823",
  "balance": 2000.0
}

### 4Ô∏è‚É£ Create another bank account
POST http://localhost:8080/api/bank-accounts
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjbGllbnQyQGV4YW1wbGUuY29tIiwiaWF0IjoxNzQyMzM3MDUxLCJleHAiOjE3NDIzNzMwNTF9.0Ofr812jNitF6hEa6Y2MqImSYZkdvXO3Dcg2iE-un2w

{
  "accountNumber": "123744782",
  "balance": 1200.0
}

### 5Ô∏è‚É£ Create a new card
POST http://localhost:8080/cards/create
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0MkBleGFtcGxlLmNvbSIsImlhdCI6MTc0MjMyMjI5NSwiZXhwIjoxNzQyMzU4Mjk1fQ.tzcjpc-v6xHybaHtxI2Beu-Ym3eSjvwdEdNm8ZsKk58

{
  "bankAccountId": "67d9c0bb34bf035f7eeacfe4",
  "cvv": 564
}

### 6Ô∏è‚É£ Create another card
POST http://localhost:8080/cards/create
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0MkBleGFtcGxlLmNvbSIsImlhdCI6MTc0MjMyMjI5NSwiZXhwIjoxNzQyMzU4Mjk1fQ.tzcjpc-v6xHybaHtxI2Beu-Ym3eSjvwdEdNm8ZsKk58

{
  "bankAccountId": "67d9b71f23d95c5affd70905",
  "cvv": 123
}

### 7Ô∏è‚É£ Create a new transaction
POST http://localhost:8080/api/transactions
Content-Type: application/json

{
  "amount": 150.75,
  "fromAccountId": "67d9ef3aa5aa3c14969babfa",
  "toAccountId": "67d9f602edaf93335978427e"
}

### 8Ô∏è‚É£ Create another transaction
POST http://localhost:8080/api/transactions
Content-Type: application/json

{
  "amount": 500.00,
  "fromAccountId": "67d9ef3aa5aa3c14969babfa",
  "toAccountId": "67d9f602edaf93335978427e"
}

### 9Ô∏è‚É£ Get all clients
GET http://localhost:8080/api/clients
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0MkBleGFtcGxlLmNvbSIsImlhdCI6MTc0MjMxNTAyMywiZXhwIjoxNzQyMzUxMDIzfQ.aGU3Z9zVhvfN7SoRechcSQKbl-JOlWdVrO1l-nhDMxs

### üîü Get all bank accounts
GET http://localhost:8080/api/bank-accounts

### 1Ô∏è‚É£1Ô∏è‚É£ Get a specific bank account by ID
GET http://localhost:8080/api/bank-accounts/123456789

### 1Ô∏è‚É£2Ô∏è‚É£ Get all cards
GET http://localhost:8080/cards

### 1Ô∏è‚É£3Ô∏è‚É£ Get a specific card by ID
GET http://localhost:8080/api/cards/4111111111111111

### 1Ô∏è‚É£4Ô∏è‚É£ Get all transactions
GET http://localhost:8080/api/transactions

### 1Ô∏è‚É£5Ô∏è‚É£ Get a specific transaction by ID
GET http://localhost:8080/api/transactions/transactionId

### 1Ô∏è‚É£6Ô∏è‚É£ Delete a transaction
DELETE http://localhost:8080/api/transactions/67d9a5ed397f680e5a1c2068

### 1Ô∏è‚É£7Ô∏è‚É£ Delete a card
DELETE http://localhost:8080/api/cards/4111111111111111

### 1Ô∏è‚É£8Ô∏è‚É£ Delete a bank account
DELETE http://localhost:8080/api/bank-accounts/123456789


### üîπ 19. Request Money from Another User
POST http://localhost:8080/api/money-requests
Content-Type: application/json

{
  "amount": 21.00,
  "fromAccountId": "67d9ed5da5aa3c14969babf9",
  "toAccountId": "67d9f40aedaf93335978427d"
}

### üîπ 2Ô∏è0. Get All Money Requests for a User
GET http://localhost:8080/api/money-requests/user/67d9f40aedaf93335978427d

### üîπ 21. Approve a Money Request
PUT http://localhost:8080/api/money-requests/67da12939668bd39b656ff0c/status?status=APPROVED

### üîπ 22. Decline a Money Request
PUT http://localhost:8080/api/money-requests/67da0a195b97a9792e3ffe86/status?status=DECLINED

### üîπ Get all notifications
GET http://localhost:8080/api/notifications

### üîπ 23. Create a notification manually
POST http://localhost:8080/api/notifications
Content-Type: application/json

{
  "clientId": "client1",
  "message": "Notificare de test: Acesta este un mesaj de test",
  "read": false
}

### üîπ 24. Get notifications for a client by clientid
GET http://localhost:8080/api/notifications/client/67d9ed5da5aa3c14969babf9

### üîπ 25. Get notification by notifid
GET http://localhost:8080/api/notifications/667d9f40aedaf93335978427d

### üîπ 26. Marck notification as read
PUT http://localhost:8080/api/notifications/67d9f091edaf93335978427c/read